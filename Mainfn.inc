GET_USERNAME MACRO USERNAME,MES1,MES2
    LOCAL  FIRSTCHAR,CHECKNEXT,WRONGCHAR,CHECKSMALL,READCHAR,ENTER,GET_CLICK
    SETCURSOR 10,10 ;setting cursor position
    
     DISPLAYSTRING MES1   ;Dipslying first message

 
    SETCURSOR 11,15
      ;READ FISRT CHARACTER
    MOV AH,01H 
    MOV DI,0
    
    FIRSTCHAR:INT 21H 
    CMP AL,'A'
    JA CHECKNEXT
    JB WRONGCHAR  ; IF CHARACTER NOT AN ALPHAPETE SO GO AND REREAD IT
    
    CHECKNEXT:
    CMP AL,'Z'
    JA   CHECKSMALL  ; IF NOT IN CAPITAL LETTERS RANGE MAY BE IN SMALL LETTERS RANGE SO GO AND CHECK IT
    MOV  USERNAME[DI],AL
    INC DI
    JMP READCHAR
     WRONGCHAR:
     PUSH AX
      SETCURSOR 11,15
      POP AX
     JMP FIRSTCHAR 
     CHECKSMALL:
      CMP AL,'a'
      JB WRONGCHAR
      CMP AL,'z'
      JA  WRONGCHAR
      MOV  USERNAME[DI],AL  ;CHARCTER IS IN RANGE SO ADD IT TO USERNAME AND COMPLETE READING
      INC DI
       
      MOV CX,14   ;TO GET REMAINING OF 15 CHARACTERS
      MOV AH,01H 
       READCHAR:
	   INT 21H 
       CMP AL,13 ;CHECK IF IT IS ENTER
       JE ENTER   ;IF ENTER STOP READING AND DISPLAY NEXT MES
       MOV USERNAME[DI],AL
	   INC DI
       DEC CX
      JNZ READCHAR 
      ENTER: ;IF ENTER STOP READING AND DISPLAY NEXT MES
      SETCURSOR 12,10
      
    DISPLAYSTRING MES2
	;////////CHECK IF ENTER WAS PRESSED TO MOVE TO NEXT SCREEN////////////////////
	GET_ENTER: ;WAIT FOR AN ENTER TO CONTINUE
     MOV AH,1
     INT 16H 
     CMP AH,1
     JE  GET_ENTER
     MOV AH,0
     INT 16H 
     CMP AH,1CH
     JNE GET_ENTER 
ENDM   GET_USERNAME 
;///////////////////////////////////////////////
TWOREQ MACRO
  LOCAL MYREPLY,REPLY  
  MYREPLY:   
   MOV AH,1
   INT 16H 
   JZ REPLY
   MOV AH,0
   INT 16H
   CMP AH,TEMP1
   JNE REPLY 
   SEND_BYTE TEMP1 
   MOV STAT,1000B
   CMP TEMP1,3CH;F2
   JE F2
   JMP F1;START WHATEVER AS PLAYER2
   REPLY:
   RECIEVE_BYTE
   CMP AL,0
   JE MYREPLY
   ;START WHATEVER AS PLAYER1
   MOV STAT,1010B
   CMP AL,3CH;F2
   JE F2
   JMP F1 

ENDM TWOREQ 
;/////////////////////////////////////////////////
REQUESTREC MACRO
   LOCAL SETTEMP2,YOURREPLY,YF1,YF2
   YOURREPLY:   
   MOV AH,1
   INT 16H 
   JZ YOURREPLY
   MOV AH,0
   INT 16H
   CMP AH,TEMP1
   JNE HERE;WHATEVER AS PLAYER2
   MOV STAT,1000B 
   SEND_BYTE TEMP1
   CMP TEMP1,3CH;F2
   JE F2
   JMP F1
   HERE:
   CMP AH,01H  ;CHECK IF ESC  
   JE ESC
   CMP AH,3CH   ;CHECK IF F2 
   JE SETTEMP2
   CMP AH,3BH   ;CHECK IF F1
   JNE YOURREPLY
   SETTEMP2:
   MOV TEMP2,AH
   CMP AH,3CH   ;CHECK IF F2 
   JE YF2 
   CMP AH,3BH   ;CHECK IF F1
   JE YF1 
   YF2:
   SETCURSOR 23,0
   DISPLAYSTRING MES11
   SEND_BYTE TEMP2
   TWOREQ
   YF1:
   SETCURSOR 23,0
   DISPLAYSTRING MES12
   SEND_BYTE TEMP2
   TWOREQ 
 
ENDM REQUESTREC 
;/////////////////////////////////////////////////
 SENDUN MACRO 
    LOCAL R,MYLOOP1,MYLOOP2
   ;;;;;;;;;;;;;;;;;;;;;;;;
    MOV SI,OFFSET MY_USERNAME
    MOV CX,16
    MYLOOP1:
    MOV BL,[SI] 
    MOV TEMP3,BL
    SEND_BYTE TEMP3
    R:
    RECIEVE_BYTE
    CMP AL,0
    JE R
    INC SI
    LOOP MYLOOP1 
    
    MOV SI,OFFSET OTHER_USER
    MOV CX,16 
    MYLOOP2:
    RECIEVE_BYTE
    CMP AL,0
    JE MYLOOP2
    MOV [SI],AL
    INC SI
    SEND_BYTE 1
    LOOP MYLOOP2
    
 
 ENDM SENDUN
 ;//////////////////////////////////////////////// 
 RECUN MACRO
    LOCAL MYLOOP3,MYLOOP4,M  
    MOV SI,OFFSET OTHER_USER
    MOV CX,16 
    MYLOOP3:
    RECIEVE_BYTE
    CMP AL,0
    JE MYLOOP3
    MOV [SI],AL
    INC SI
    SEND_BYTE 1
    LOOP MYLOOP3
    
    MOV SI,OFFSET MY_USERNAME
    MOV CX,16
    MYLOOP4:
    MOV BL,[SI] 
    MOV TEMP3,BL
    SEND_BYTE TEMP3
    M:
    RECIEVE_BYTE
    CMP AL,0
    JE M
    INC SI
    LOOP MYLOOP4
     
 ENDM RECUN
   
 ;////////////////////////////////////////////////
  MAIN_SCREEN MACRO
     LOCAL GET_CLICK 
     CLEAR_SCREEN
      MOV CURSOR1,0
      MOV CURSOR2,0C00H  
    ;setting cursor position
      SETCURSOR 10,5 
      ;--------------------
      ;DISPLAY MESSAGES
       DISPLAYSTRING MES1
       
       SETCURSOR 12,5
       DISPLAYSTRING MES2
       
       SETCURSOR 14,5
       DISPLAYSTRING MES3  
      
  ;DESIGNING NOTIFICATION BAR 
       SETCURSOR 20,0 
       DISPLAY_CHARS '-',0FH,40
     ;-------------------
     ;GET USER CLICK
     GETCLICK: 
     MOV AH,1
     INT 16H
     JZ  RECIEVEREQUEST
     
    MOV AH,0
     INT 16H ;AH HAS THE KEY SCAN CODE 
     
     CMP AH,01H  ;CHECK IF ESC  
     JE ESC
     
     CMP AH,3CH   ;CHECK IF F2 
     JE SENDTHESTART 
     CMP AH,3BH   ;CHECK IF F1
     JE SENDTHESTART
     JMP GETCLICK
     YOUF2:
     
     SETCURSOR 23,0
     DISPLAYSTRING MES11
     DISPLAY_CHARS ' ',0FH,1
	 DISPLAYSTRING OTHER_USER
     JMP CHECKREPLY
     
     
     SENDTHESTART:
     MOV TEMP2,AH
     SEND_BYTE TEMP2
     SENDUN
     
     CMP AH,3CH   ;CHECK IF F2
     JE YOUF2 
     YOUF1: 

     SETCURSOR 23,0
     DISPLAYSTRING MES12 
     DISPLAY_CHARS ' ',0FH,1
	 DISPLAYSTRING OTHER_USER
	 
     CHECKREPLY:
     RECIEVE_BYTE
     CMP AL,0
     JE CHECKREPLY
     CMP AL,TEMP2
     JNE SETT1;START WHATEVER YOU HAVE SENT
     MOV STAT,1010B
     CMP TEMP2,3CH;F2
     JE F2
     JMP F1
     ;YOU RECIVED A DIFFERENT REQ MESSAGE SET TEMP1
     SETT1:
     MOV TEMP1,AL
     CMP AL,3CH
     JE THF2
     CMP AL,3BH
     JNE CHECKREPLY   
     THF1:
     SETCURSOR 21,0
     DISPLAYSTRING MES9
     DISPLAY_CHARS ' ',0FH,1
	DISPLAYSTRING OTHER_USER
     JMP REQ2
     THF2:
     SETCURSOR 21,0
     DISPLAYSTRING MES10
     DISPLAY_CHARS ' ',0FH,1
	DISPLAYSTRING OTHER_USER  
     ;MACRO IF 2 REQ
     REQ2:
     TWOREQ
     
     RECIEVEREQUEST: 
     RECIEVE_BYTE
     CMP AL,0
     JE GETCLICK
     ; RECIEVE REQUEST INTIALIZE TEMP1 
     
     MOV TEMP1,AL
     RECUN
     CMP TEMP1,3CH;F2
     JE THEYF2
     CMP TEMP1,3BH;F1
     JNE GETCLICK 
     THEYF1:
      SETCURSOR 21,0
     DISPLAYSTRING MES9
     DISPLAY_CHARS ' ',0FH,1
	DISPLAYSTRING OTHER_USER 
     JMP REST
     THEYF2:
     SETCURSOR 21,0
     DISPLAYSTRING MES10
     DISPLAY_CHARS ' ',0FH,1
	DISPLAYSTRING OTHER_USER
     REST:
     
     REQUESTREC 
    
ENDM  MAIN_SCREEN 
 
 